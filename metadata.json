{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "won",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "hash",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "species",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "gene",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "happiness",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "discipline",
										"type": "uint8"
									},
									{
										"internalType": "uint16",
										"name": "id",
										"type": "uint16"
									},
									{
										"internalType": "uint32",
										"name": "weight",
										"type": "uint32"
									},
									{
										"internalType": "uint8",
										"name": "stage",
										"type": "uint8"
									}
								],
								"internalType": "struct A.attributes",
								"name": "attribute",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint32",
										"name": "hitpoints",
										"type": "uint32"
									},
									{
										"internalType": "uint16",
										"name": "strength",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "agility",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "intellegence",
										"type": "uint16"
									}
								],
								"internalType": "struct A.powers",
								"name": "power",
								"type": "tuple"
							},
							{
								"internalType": "uint32",
								"name": "exp",
								"type": "uint32"
							},
							{
								"components": [
									{
										"internalType": "uint64",
										"name": "deadtime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "endurance",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "frozentime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "stamina",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "evolutiontime",
										"type": "uint64"
									}
								],
								"internalType": "struct A.timings",
								"name": "time",
								"type": "tuple"
							},
							{
								"internalType": "uint8[3]",
								"name": "trait",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint8[3]",
								"name": "skill",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint32",
								"name": "status",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "family",
								"type": "uint16"
							},
							{
								"internalType": "bool",
								"name": "shinning",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct A.Pets",
						"name": "selfOrBefore",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "species",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "gene",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "happiness",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "discipline",
										"type": "uint8"
									},
									{
										"internalType": "uint16",
										"name": "id",
										"type": "uint16"
									},
									{
										"internalType": "uint32",
										"name": "weight",
										"type": "uint32"
									},
									{
										"internalType": "uint8",
										"name": "stage",
										"type": "uint8"
									}
								],
								"internalType": "struct A.attributes",
								"name": "attribute",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint32",
										"name": "hitpoints",
										"type": "uint32"
									},
									{
										"internalType": "uint16",
										"name": "strength",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "agility",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "intellegence",
										"type": "uint16"
									}
								],
								"internalType": "struct A.powers",
								"name": "power",
								"type": "tuple"
							},
							{
								"internalType": "uint32",
								"name": "exp",
								"type": "uint32"
							},
							{
								"components": [
									{
										"internalType": "uint64",
										"name": "deadtime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "endurance",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "frozentime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "stamina",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "evolutiontime",
										"type": "uint64"
									}
								],
								"internalType": "struct A.timings",
								"name": "time",
								"type": "tuple"
							},
							{
								"internalType": "uint8[3]",
								"name": "trait",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint8[3]",
								"name": "skill",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint32",
								"name": "status",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "family",
								"type": "uint16"
							},
							{
								"internalType": "bool",
								"name": "shinning",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct A.Pets",
						"name": "opponOrAfter",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "damage",
						"type": "uint64"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "bit",
						"type": "uint256"
					}
				],
				"name": "Result",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "species",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "gene",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "happiness",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "discipline",
										"type": "uint8"
									},
									{
										"internalType": "uint16",
										"name": "id",
										"type": "uint16"
									},
									{
										"internalType": "uint32",
										"name": "weight",
										"type": "uint32"
									},
									{
										"internalType": "uint8",
										"name": "stage",
										"type": "uint8"
									}
								],
								"internalType": "struct A.attributes",
								"name": "attribute",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint32",
										"name": "hitpoints",
										"type": "uint32"
									},
									{
										"internalType": "uint16",
										"name": "strength",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "agility",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "intellegence",
										"type": "uint16"
									}
								],
								"internalType": "struct A.powers",
								"name": "power",
								"type": "tuple"
							},
							{
								"internalType": "uint32",
								"name": "exp",
								"type": "uint32"
							},
							{
								"components": [
									{
										"internalType": "uint64",
										"name": "deadtime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "endurance",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "frozentime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "stamina",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "evolutiontime",
										"type": "uint64"
									}
								],
								"internalType": "struct A.timings",
								"name": "time",
								"type": "tuple"
							},
							{
								"internalType": "uint8[3]",
								"name": "trait",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint8[3]",
								"name": "skill",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint32",
								"name": "status",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "family",
								"type": "uint16"
							},
							{
								"internalType": "bool",
								"name": "shinning",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct A.Pets",
						"name": "AfterMon",
						"type": "tuple"
					}
				],
				"name": "StatChangedResult",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "_rank",
						"type": "uint8"
					}
				],
				"name": "BattlePet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "DailyMaxReward",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "DailyRewardLimit",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "Limit",
						"type": "uint8"
					},
					{
						"internalType": "uint64",
						"name": "resettimer",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "HatchEgg",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "Pet",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "species",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "gene",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "happiness",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "discipline",
								"type": "uint8"
							},
							{
								"internalType": "uint16",
								"name": "id",
								"type": "uint16"
							},
							{
								"internalType": "uint32",
								"name": "weight",
								"type": "uint32"
							},
							{
								"internalType": "uint8",
								"name": "stage",
								"type": "uint8"
							}
						],
						"internalType": "struct A.attributes",
						"name": "attribute",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "hitpoints",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "strength",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "agility",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "intellegence",
								"type": "uint16"
							}
						],
						"internalType": "struct A.powers",
						"name": "power",
						"type": "tuple"
					},
					{
						"internalType": "uint32",
						"name": "exp",
						"type": "uint32"
					},
					{
						"components": [
							{
								"internalType": "uint64",
								"name": "deadtime",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "endurance",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "frozentime",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "stamina",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "evolutiontime",
								"type": "uint64"
							}
						],
						"internalType": "struct A.timings",
						"name": "time",
						"type": "tuple"
					},
					{
						"internalType": "uint32",
						"name": "status",
						"type": "uint32"
					},
					{
						"internalType": "uint16",
						"name": "family",
						"type": "uint16"
					},
					{
						"internalType": "bool",
						"name": "shinning",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "RewardLimitTimer",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "TowerLevel",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "TowerResetCd",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "baseTokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "confirmArtifactContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "_foodtype",
						"type": "uint8"
					}
				],
				"name": "feedsPet",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "getPetsByOwner",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "getPetsByOwnerByBatch",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "species",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "gene",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "happiness",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "discipline",
										"type": "uint8"
									},
									{
										"internalType": "uint16",
										"name": "id",
										"type": "uint16"
									},
									{
										"internalType": "uint32",
										"name": "weight",
										"type": "uint32"
									},
									{
										"internalType": "uint8",
										"name": "stage",
										"type": "uint8"
									}
								],
								"internalType": "struct A.attributes",
								"name": "attribute",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint32",
										"name": "hitpoints",
										"type": "uint32"
									},
									{
										"internalType": "uint16",
										"name": "strength",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "agility",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "intellegence",
										"type": "uint16"
									}
								],
								"internalType": "struct A.powers",
								"name": "power",
								"type": "tuple"
							},
							{
								"internalType": "uint32",
								"name": "exp",
								"type": "uint32"
							},
							{
								"components": [
									{
										"internalType": "uint64",
										"name": "deadtime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "endurance",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "frozentime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "stamina",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "evolutiontime",
										"type": "uint64"
									}
								],
								"internalType": "struct A.timings",
								"name": "time",
								"type": "tuple"
							},
							{
								"internalType": "uint8[3]",
								"name": "trait",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint8[3]",
								"name": "skill",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint32",
								"name": "status",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "family",
								"type": "uint16"
							},
							{
								"internalType": "bool",
								"name": "shinning",
								"type": "bool"
							}
						],
						"internalType": "struct A.Pets[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "imageExtension",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "imageURL",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_count",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "namebyID",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "resetTowerLevel",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_salePrice",
						"type": "uint256"
					}
				],
				"name": "royaltyInfo",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeMint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_artifact",
						"type": "address"
					}
				],
				"name": "setArtifactContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "baseURI",
						"type": "string"
					}
				],
				"name": "setBaseURI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "ext",
						"type": "string"
					}
				],
				"name": "setImageExtension",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "URL",
						"type": "string"
					}
				],
				"name": "setImageURL",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "TF",
						"type": "bool"
					}
				],
				"name": "setnamebyID",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenOfOwnerByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "_trainingtype",
						"type": "uint8"
					}
				],
				"name": "trainsPet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "viewNFT",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "species",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "gene",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "happiness",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "discipline",
										"type": "uint8"
									},
									{
										"internalType": "uint16",
										"name": "id",
										"type": "uint16"
									},
									{
										"internalType": "uint32",
										"name": "weight",
										"type": "uint32"
									},
									{
										"internalType": "uint8",
										"name": "stage",
										"type": "uint8"
									}
								],
								"internalType": "struct A.attributes",
								"name": "attribute",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint32",
										"name": "hitpoints",
										"type": "uint32"
									},
									{
										"internalType": "uint16",
										"name": "strength",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "agility",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "intellegence",
										"type": "uint16"
									}
								],
								"internalType": "struct A.powers",
								"name": "power",
								"type": "tuple"
							},
							{
								"internalType": "uint32",
								"name": "exp",
								"type": "uint32"
							},
							{
								"components": [
									{
										"internalType": "uint64",
										"name": "deadtime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "endurance",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "frozentime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "stamina",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "evolutiontime",
										"type": "uint64"
									}
								],
								"internalType": "struct A.timings",
								"name": "time",
								"type": "tuple"
							},
							{
								"internalType": "uint8[3]",
								"name": "trait",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint8[3]",
								"name": "skill",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint32",
								"name": "status",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "family",
								"type": "uint16"
							},
							{
								"internalType": "bool",
								"name": "shinning",
								"type": "bool"
							}
						],
						"internalType": "struct A.Pets",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "viewTowerMonster",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "species",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "gene",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "happiness",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "discipline",
										"type": "uint8"
									},
									{
										"internalType": "uint16",
										"name": "id",
										"type": "uint16"
									},
									{
										"internalType": "uint32",
										"name": "weight",
										"type": "uint32"
									},
									{
										"internalType": "uint8",
										"name": "stage",
										"type": "uint8"
									}
								],
								"internalType": "struct A.attributes",
								"name": "attribute",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint32",
										"name": "hitpoints",
										"type": "uint32"
									},
									{
										"internalType": "uint16",
										"name": "strength",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "agility",
										"type": "uint16"
									},
									{
										"internalType": "uint16",
										"name": "intellegence",
										"type": "uint16"
									}
								],
								"internalType": "struct A.powers",
								"name": "power",
								"type": "tuple"
							},
							{
								"internalType": "uint32",
								"name": "exp",
								"type": "uint32"
							},
							{
								"components": [
									{
										"internalType": "uint64",
										"name": "deadtime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "endurance",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "frozentime",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "stamina",
										"type": "uint64"
									},
									{
										"internalType": "uint64",
										"name": "evolutiontime",
										"type": "uint64"
									}
								],
								"internalType": "struct A.timings",
								"name": "time",
								"type": "tuple"
							},
							{
								"internalType": "uint8[3]",
								"name": "trait",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint8[3]",
								"name": "skill",
								"type": "uint8[3]"
							},
							{
								"internalType": "uint32",
								"name": "status",
								"type": "uint32"
							},
							{
								"internalType": "uint16",
								"name": "family",
								"type": "uint16"
							},
							{
								"internalType": "bool",
								"name": "shinning",
								"type": "bool"
							}
						],
						"internalType": "struct A.Pets",
						"name": "APet",
						"type": "tuple"
					},
					{
						"internalType": "uint8[4]",
						"name": "_chances",
						"type": "uint8[4]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"Approval(address,address,uint256)": {
					"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
				},
				"ApprovalForAll(address,address,bool)": {
					"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
				},
				"Transfer(address,address,uint256)": {
					"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
				}
			},
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "See {IERC721-approve}."
				},
				"balanceOf(address)": {
					"details": "See {IERC721-balanceOf}."
				},
				"burn(uint256)": {
					"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
				},
				"getApproved(uint256)": {
					"details": "See {IERC721-getApproved}."
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC721-isApprovedForAll}."
				},
				"name()": {
					"details": "See {IERC721Metadata-name}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"ownerOf(uint256)": {
					"details": "See {IERC721-ownerOf}."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC721-setApprovalForAll}."
				},
				"supportsInterface(bytes4)": {
					"details": "Checks if the contract implements the ERC2981 interface and returns true if it does.",
					"params": {
						"interfaceId": "- The interface ID to check for support."
					},
					"returns": {
						"_0": "A boolean indicating whether the contract supports the ERC2981 interface or not."
					}
				},
				"symbol()": {
					"details": "See {IERC721Metadata-symbol}."
				},
				"tokenByIndex(uint256)": {
					"details": "See {IERC721Enumerable-tokenByIndex}."
				},
				"tokenOfOwnerByIndex(address,uint256)": {
					"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
				},
				"tokenURI(uint256)": {
					"details": "See {IERC721Metadata-tokenURI}."
				},
				"totalSupply()": {
					"details": "See {IERC721Enumerable-totalSupply}."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC721-transferFrom}."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/main.sol": "Main"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 1
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts@4.7.0/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts@4.7.0/token/ERC721/ERC721.sol": {
			"keccak256": "0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e",
			"license": "MIT",
			"urls": [
				"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea",
				"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB"
			]
		},
		"@openzeppelin/contracts@4.7.0/token/ERC721/IERC721.sol": {
			"keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
			"license": "MIT",
			"urls": [
				"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
				"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
			]
		},
		"@openzeppelin/contracts@4.7.0/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
				"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
			]
		},
		"@openzeppelin/contracts@4.7.0/token/ERC721/extensions/ERC721Burnable.sol": {
			"keccak256": "0xfa6873a010382f62e9ffe4592b305ef6e60f55502c95ed0ffa51eb10b5200d45",
			"license": "MIT",
			"urls": [
				"bzz-raw://f86000c6885fb5a0a8bd5cd2595d302f0b4038411d66b85b07fa10590f844c2e",
				"dweb:/ipfs/QmeZuXaxdr7NH2wUAprx3BcLTke9RtcptAZgRKfQVHops5"
			]
		},
		"@openzeppelin/contracts@4.7.0/token/ERC721/extensions/ERC721Enumerable.sol": {
			"keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
			"license": "MIT",
			"urls": [
				"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
				"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
			]
		},
		"@openzeppelin/contracts@4.7.0/token/ERC721/extensions/IERC721Enumerable.sol": {
			"keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
			"license": "MIT",
			"urls": [
				"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
				"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
			]
		},
		"@openzeppelin/contracts@4.7.0/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
				"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
			]
		},
		"@openzeppelin/contracts@4.7.0/utils/Address.sol": {
			"keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
			"license": "MIT",
			"urls": [
				"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
				"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
			]
		},
		"@openzeppelin/contracts@4.7.0/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts@4.7.0/utils/Strings.sol": {
			"keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
				"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
			]
		},
		"@openzeppelin/contracts@4.7.0/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts@4.7.0/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"contracts/Metadata.sol": {
			"keccak256": "0xa052946805f4e7f544f902f33c0c079d583a7aa173abb3895922fb5903082e2d",
			"license": "MIT",
			"urls": [
				"bzz-raw://a5cd7acee695dfda6c07ccecff644397d89a4c3808355a64ebf6a543cd46e463",
				"dweb:/ipfs/QmU6hh7EABKyB8H4Lgm8etsgEeTCwMHChvJA1K6QLuF5w5"
			]
		},
		"contracts/base64.sol": {
			"keccak256": "0xd77e40b5c515f5a7261fdc22defab446731cef04fb589e646fa38b035ad235dd",
			"license": "MIT",
			"urls": [
				"bzz-raw://cdd0fea280b83b213ffc264869e6386a02a345ac3651d4f26b8f8f705b36c2d2",
				"dweb:/ipfs/Qmb9WvLPK3P9JVVREJ2uJN3VARdqsgqtLdGY2REJEZHQuE"
			]
		},
		"contracts/core.sol": {
			"keccak256": "0x9f60563e06612922e9b8efba100dbd9cae932759ee23a6cb638450307b59cd5b",
			"license": "MIT",
			"urls": [
				"bzz-raw://0e104fe78a1f1d42bf5743be4e7f5734ac48c3200c3ff6aee35347c6c5d78c85",
				"dweb:/ipfs/QmUzxtQDrrZdJQU9uLgCmeVjMgTniTkAN1DQERrfRF8tYQ"
			]
		},
		"contracts/evolution.sol": {
			"keccak256": "0xffb33bfc05ebbf06cb5c2fa2fa494124834b7c7131d3d8c3adbb486e2ae1de30",
			"license": "MIT",
			"urls": [
				"bzz-raw://a1c8f4dbe08d64fec49a83d30934e167993274335ff9d1fa1941ea9a4038c480",
				"dweb:/ipfs/QmXRQuJUkeF36mhXnBbQRZ2p3da5Nkfs5rFkfK6y344mkd"
			]
		},
		"contracts/main.sol": {
			"keccak256": "0x94cd4fe16aeed959f2cc8b21ceaf9fcd4261c0dc7a06f18992111259f96358e9",
			"license": "MIT",
			"urls": [
				"bzz-raw://0497934cbecb8afc40044d34116dc958a73db3a639092d02199b2a8ef89c254b",
				"dweb:/ipfs/QmcucpFRkhfyXviCe5L8GvrVUTCVaNBC7EHi6dibL6QT1Z"
			]
		},
		"contracts/myPet.sol": {
			"keccak256": "0xd059fcd68acb5abc5ccf4c4cec9573b6889a33ec5a0cb506d07e97d6302c654e",
			"license": "MIT",
			"urls": [
				"bzz-raw://649abf0e4450087b46fe41dd3b4ed5093a73b1e60bd2fc309ee8d22af550e888",
				"dweb:/ipfs/QmRxMY8zZb2J9712tb4sWxVHTFyLk1fNCBp5cV3aLjJUKC"
			]
		}
	},
	"version": 1
}
